<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Mapper.BookMapper">

	<select id="select" resultType="com.example.demo.repository.Book">
		select * from m_book;
	</select>

  <insert id="insert" parameterType="com.example.demo.repository.LendingBook">
  	INSERT INTO t_loan (book_id, user_id, plan_day)
  	VALUES (#{book_id}, #{user_id}, #{plan_day})
  </insert>

  <update id="update" parameterType="com.example.demo.repository.Book">
  	UPDATE m_book SET max_num = 0 WHERE book_id = #{book_id};
  </update>

  <select id="bookSelect" resultType="com.example.demo.repository.Book">
	select * from m_book where book_id = #{book_id};
	</select>

<!-- 貸出中書籍リスト -->
	<select id="returnSelect" resultType="com.example.demo.repository.LendingBook">
		SELECT t_loan.book_id, t_loan.user_id, m_book.title,m_category.category,m_book.author,plan_day
		FROM t_loan
		JOIN m_user
		ON t_loan.user_id = m_user.user_id
		JOIN m_book
		ON t_loan.book_id = m_book.book_id
		JOIN m_category
		ON m_category.category_id = m_book.category_id
		where t_loan.user_id = 1;
	</select>

<!-- t_historyに登録 書籍返却したよ〜履歴 -->
	<insert id="returnInsert" parameterType="com.example.demo.repository.History">
		INSERT INTO t_history (book_id, user_id, loan_day)
		VALUES (#{book_id}, #{user_id}, #{loan_day});
	</insert>

<!-- t_loanから返却した書籍のデータを削除 -->
	<delete id="returnDelete" parameterType="com.example.demo.repository.LendingBook">
		DELETE FROM t_loan WHERE book_id = 1 AND user_id = 1;
	</delete>

</mapper>